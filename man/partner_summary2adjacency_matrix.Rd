% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjacency-matrix.R
\name{partner_summary2adjacency_matrix}
\alias{partner_summary2adjacency_matrix}
\title{Convert a partner summary table into an adjacency matrix}
\usage{
partner_summary2adjacency_matrix(
  x,
  sparse = TRUE,
  inputcol = "pre_id",
  outputcol = "post_id",
  inputids = NULL,
  outputids = NULL,
  standardise_input = T
)
}
\arguments{
\item{x}{dataframe as produced by \code{flywire_partner_summary},
\code{neuprint_connection_table} or equivalent.}

\item{sparse}{Whether to return a sparse matrix (default \code{TRUE} in case
you are making a big one)}

\item{inputcol, outputcol}{Character vector specifying the columns containing
input and output identifiers.}

\item{inputids, outputids}{Optional vectors of input/output ids to ensure that
these are present in the output matrix. Alternatively these may contain a
function that takes the dataframe \code{x} as input and returns a grouping
vector. See \bold{details} section for more information.}

\item{standardise_input}{whether to standardise the column names/types in the
input dataframe. The default should work for flywire \code{fafbseg} and
\code{neuprintr} input and ensure that we identify appropriate
\code{pre_id}/\code{post_id} columns.}
}
\value{
A matrix with inputs as rows and outputs (downstream neurons) as
  columns
}
\description{
Convert a partner summary table into an adjacency matrix
}
\details{
Passing a function to \code{inputids} and/or \code{outputids} allows
  partner neurons to be grouped with maximum flexibility. The input to the
  function will be the dataframe \code{x} (after standardisation if this has
  been requested). The output must be a single vector which can be
  interpreted as a factor to group partner neurons.
}
\examples{
\dontrun{
da2ds=neuprintr::neuprint_connection_table('DA2', details=TRUE, partners='out', threshold=15)
am=partner_summary2adjacency_matrix(da2ds, inputcol = 'partner', outputcol = 'bodyid')
library(Matrix)
image(am, xlab='DA2 PNs', ylab='outputs')
}
}
